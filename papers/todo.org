+ [ ] redo storage methods to return isomorphisms when appropriate
+ [ ] implement/explain concat (write out on paper)
+ [ ] example motivating partial isos: decomposition (write out
      on paper first)
+ [ ] write about append/concat for version of storage with subsetting
+ [ ] write about defragmentation
  + [ ] explain GCBP
+ [ ] redo section on eliminators.  Can observe the labels or not.
+ [ ] need to redo section on zipping.
+ [ ] add eliminators for species etc.
+ [ ] species pictures, based on written notes
  + [ ] improvements
  + [ ] picture for join and bind
+ [ ] write about how to interpret species pictures
+ [ ] implement <[.]>
+ [ ] examples. Show use of recursion in the host language.
+ [ ] write about our Haskell implementation
+ [ ] related work section
+ [ ] future work section
+ [ ] conclusion
